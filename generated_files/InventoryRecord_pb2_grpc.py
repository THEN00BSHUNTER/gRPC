# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import InventoryRecord_pb2 as InventoryRecord__pb2


class InventoryRecordServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getInventoryRecordById = channel.unary_unary(
                '/InventoryRecordService/getInventoryRecordById',
                request_serializer=InventoryRecord__pb2.InventoryRecordRequest.SerializeToString,
                response_deserializer=InventoryRecord__pb2.InventoryRecordResponse.FromString,
                )
        self.getInventoryRecordByKeyValue = channel.unary_unary(
                '/InventoryRecordService/getInventoryRecordByKeyValue',
                request_serializer=InventoryRecord__pb2.InventoryRecordRequestSearch.SerializeToString,
                response_deserializer=InventoryRecord__pb2.InventoryRecordResponse.FromString,
                )
        self.getInventoryRecordByKeyValueRange = channel.unary_unary(
                '/InventoryRecordService/getInventoryRecordByKeyValueRange',
                request_serializer=InventoryRecord__pb2.InventoryRecordSearchRange.SerializeToString,
                response_deserializer=InventoryRecord__pb2.InventoryRecordResponseList.FromString,
                )
        self.getDistribution = channel.unary_unary(
                '/InventoryRecordService/getDistribution',
                request_serializer=InventoryRecord__pb2.GetDistribution.SerializeToString,
                response_deserializer=InventoryRecord__pb2.InventoryRecordResponseList.FromString,
                )
        self.updateInventoryRecord = channel.unary_unary(
                '/InventoryRecordService/updateInventoryRecord',
                request_serializer=InventoryRecord__pb2.UpdateInventoryRecord.SerializeToString,
                response_deserializer=InventoryRecord__pb2.InventoryRecordResponse.FromString,
                )


class InventoryRecordServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def getInventoryRecordById(self, request, context):
        """Create a rpc method to get the inventory record by searching ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getInventoryRecordByKeyValue(self, request, context):
        """Create a rpc method to get the inventory record by searching key value pair
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getInventoryRecordByKeyValueRange(self, request, context):
        """Create a rpc method to get the inventory record by searching key value pair for range
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getDistribution(self, request, context):
        """Create a rpc method to get distribution in double for a key name and percentile
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateInventoryRecord(self, request, context):
        """Create a rpc method to update a record an return boolean
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InventoryRecordServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getInventoryRecordById': grpc.unary_unary_rpc_method_handler(
                    servicer.getInventoryRecordById,
                    request_deserializer=InventoryRecord__pb2.InventoryRecordRequest.FromString,
                    response_serializer=InventoryRecord__pb2.InventoryRecordResponse.SerializeToString,
            ),
            'getInventoryRecordByKeyValue': grpc.unary_unary_rpc_method_handler(
                    servicer.getInventoryRecordByKeyValue,
                    request_deserializer=InventoryRecord__pb2.InventoryRecordRequestSearch.FromString,
                    response_serializer=InventoryRecord__pb2.InventoryRecordResponse.SerializeToString,
            ),
            'getInventoryRecordByKeyValueRange': grpc.unary_unary_rpc_method_handler(
                    servicer.getInventoryRecordByKeyValueRange,
                    request_deserializer=InventoryRecord__pb2.InventoryRecordSearchRange.FromString,
                    response_serializer=InventoryRecord__pb2.InventoryRecordResponseList.SerializeToString,
            ),
            'getDistribution': grpc.unary_unary_rpc_method_handler(
                    servicer.getDistribution,
                    request_deserializer=InventoryRecord__pb2.GetDistribution.FromString,
                    response_serializer=InventoryRecord__pb2.InventoryRecordResponseList.SerializeToString,
            ),
            'updateInventoryRecord': grpc.unary_unary_rpc_method_handler(
                    servicer.updateInventoryRecord,
                    request_deserializer=InventoryRecord__pb2.UpdateInventoryRecord.FromString,
                    response_serializer=InventoryRecord__pb2.InventoryRecordResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'InventoryRecordService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class InventoryRecordService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def getInventoryRecordById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/InventoryRecordService/getInventoryRecordById',
            InventoryRecord__pb2.InventoryRecordRequest.SerializeToString,
            InventoryRecord__pb2.InventoryRecordResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getInventoryRecordByKeyValue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/InventoryRecordService/getInventoryRecordByKeyValue',
            InventoryRecord__pb2.InventoryRecordRequestSearch.SerializeToString,
            InventoryRecord__pb2.InventoryRecordResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getInventoryRecordByKeyValueRange(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/InventoryRecordService/getInventoryRecordByKeyValueRange',
            InventoryRecord__pb2.InventoryRecordSearchRange.SerializeToString,
            InventoryRecord__pb2.InventoryRecordResponseList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getDistribution(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/InventoryRecordService/getDistribution',
            InventoryRecord__pb2.GetDistribution.SerializeToString,
            InventoryRecord__pb2.InventoryRecordResponseList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateInventoryRecord(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/InventoryRecordService/updateInventoryRecord',
            InventoryRecord__pb2.UpdateInventoryRecord.SerializeToString,
            InventoryRecord__pb2.InventoryRecordResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
